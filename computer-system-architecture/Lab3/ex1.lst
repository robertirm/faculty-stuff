     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit               
     6                                  import exit msvcrt.dll    
     7                                  
     8                                  ;Interpretare fara semn
     9                                  ;a - byte, b - word, c - double word, d - qword  
    10                                  segment data use32 class=data
    11 00000000 02                          a db 2
    12 00000001 3412                        b dw 1234h
    13 00000003 12001000                    c dd 100012h
    14 00000007 0540050012000000            d dq 1200054005h
    15                                  
    16                                  ;(d+d-b)+(c-a)+d    
    17                                  segment code use32 class=code
    18                                      start:
    19 00000000 8B1D[07000000]                  mov ebx, [d]
    20 00000006 8B0D[0B000000]                  mov ecx, [d+4]    ; ECX:EBX = d
    21                                          
    22 0000000C 031D[07000000]                  add ebx, [d]
    23 00000012 130D[0B000000]                  adc ecx, [d+4]    ; ECX:EBX = d+d
    24                                          
    25                                          ; b(word) -> b(dword) -> b(qword)
    26 00000018 66A1[01000000]                  mov ax,[b]        ; AX = b(word)
    27 0000001E 66BA0000                        mov dx,0          ; DX:AX = b(dword)
    28 00000022 6652                            push dx
    29 00000024 6650                            push ax
    30 00000026 58                              pop eax           ; EAX = b
    31 00000027 BA00000000                      mov edx,0         ; EDX:EAX = b(qword)
    32                                          
    33 0000002C 29C3                            sub ebx,eax
    34 0000002E 19D1                            sbb ecx,edx       ; ECX:EBX = d+d-b
    35                                          
    36                                          ;c(dword) ->c(qword)
    37 00000030 A1[03000000]                    mov eax,[c]
    38 00000035 BA00000000                      mov edx, 0        ; EDX:EAX = c
    39                                          
    40 0000003A 53                              push ebx
    41 0000003B 51                              push ecx          ;salvam rezultatul d+d-b pe stiva
    42                                          
    43                                          ;a(byte) -> a(word) -> a(dword) -> a(dword)
    44 0000003C 8A1D[00000000]                  mov bl,[a]
    45 00000042 B700                            mov bh,0          ;BX=a
    46 00000044 66B90000                        mov cx,0          ;CX:BX = a
    47 00000048 6651                            push cx
    48 0000004A 6653                            push bx
    49 0000004C 5B                              pop ebx           ;EBX = a
    50 0000004D B900000000                      mov ecx,0         ;ECX:EBX = adc
    51                                          
    52 00000052 29D8                            sub eax,ebx
    53 00000054 19CA                            sbb edx,ecx       ;EDX:EAX = c-a
    54                                          
    55 00000056 59                              pop ecx
    56 00000057 5B                              pop ebx           ;ECX:EBX = d+d-b
    57                                          
    58 00000058 01C3                            add ebx,eax
    59 0000005A 11D1                            adc ecx,edx       ;ECX:EBX = (d+d-b) + (c-a)
    60                                          
    61 0000005C 031D[07000000]                  add ebx, [d]
    62 00000062 130D[0B000000]                  adc ecx, [d+4]    ;ECX:EBX = (d+d-b) + (c-a) + d
    63                                          
    64                                          
    65                                          
    66                                          
    67                                         
    68                                          ; exit(0)
    69 00000068 6A00                            push    dword 0      
    70 0000006A FF15[00000000]                  call    [exit]       
